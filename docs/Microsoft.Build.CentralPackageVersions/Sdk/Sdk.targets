<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright (c) Microsoft Corporation. All rights reserved.
  
  Licensed under the MIT license.
-->
<Project InitialTargets="CheckPackageReferences" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="$(CustomBeforeCentralPackageVersionsTargets)" Condition=" '$(CustomBeforeCentralPackageVersionsTargets)' != '' And Exists('$(CustomBeforeCentralPackageVersionsTargets)') " />

  <PropertyGroup Condition=" '$(EnableCentralPackageVersions)' != 'false' ">
    <CentralPackagesFile Condition=" '$(CentralPackagesFile)' == '' ">$([MSBuild]::GetPathOfFileAbove('Packages.props', $(MSBuildProjectDirectory)))</CentralPackagesFile>
    <EnableCentralPackageVersions Condition=" !Exists('$(CentralPackagesFile)') ">false</EnableCentralPackageVersions>
  </PropertyGroup>

  <ItemGroup Condition=" '$(EnableCentralPackageVersions)' != 'false' ">
    <!-- Stores the package versions specified in individual projects -->
    <ProjectSpecifiedPackageVersion Include="@(PackageVersion)" />
  </ItemGroup>

  <PropertyGroup Condition=" '$(EnableCentralPackageVersions)' != 'false' ">
    <MSBuildAllProjects>$(MSBuildThisFileFullPath);$(MSBuildAllProjects)</MSBuildAllProjects>
    <MSBuildAllProjects Condition=" Exists('$(CentralPackagesFile)') ">$(CentralPackagesFile);$(MSBuildAllProjects)</MSBuildAllProjects>
  </PropertyGroup>

  <Import Project="$(CentralPackagesFile)" Condition=" '$(EnableCentralPackageVersions)' != 'false' " />

  <ItemGroup Condition=" '$(EnableCentralPackageVersions)' != 'false' ">

    <!-- Clear package versions that are duplicated from a project and the central package versions file -->
    <PackageVersion Remove="@(ProjectSpecifiedPackageVersion)" />

    <!-- Add back the project specified package versions -->
    <PackageVersion Include="@(ProjectSpecifiedPackageVersion)" />

    <!-- Stores the original package references used later to determine if there are any problems -->
    <OriginalPackageReference Include="@(PackageReference)" />

    <!-- Add global package references -->
    <PackageReference Include="@(GlobalPackageReference)" />

    <!-- Store all PackageVersion items that do not have a PackageReference -->
    <_PackagesNotReferenced Include="@(PackageVersion)" Exclude="@(PackageReference)" />

    <!-- Clear the PackageReference list -->
    <PackageReference Remove="@(OriginalPackageReference);@(GlobalPackageReference)" />

    <!-- Add back the PackageReference its from the list that contains versions, excluding the items not referenced -->
    <PackageReference Include="@(PackageVersion)" Exclude="@(_PackagesNotReferenced)" />

    <!-- Clear the temporary list of items not referenced -->
    <_PackagesNotReferenced Remove="@(_PackagesNotReferenced)" />

  </ItemGroup>

  <Target Name="CheckPackageReferences"
    Condition=" '$(EnableCentralPackageVersions)' != 'false' And '@(PackageReference)' != '' ">

    <ItemGroup>
      <!--
        Determine all of the original PackageReference items that did not have a PackageVersion
      -->
      <MissingPackageReference Include="@(OriginalPackageReference)" Exclude="@(PackageVersion)" />

      <!--
        Determine all of the PackageReference items that are already declared as GlobalPackageReference items.
      -->
    </ItemGroup>

    <!--
      Generate an error if any PackageReference has a version specified and its not an implicit item
     -->
    <Error
      Text="The package reference '%(OriginalPackageReference.Identity)' should not specify a version.  Please specify the version in '$(CentralPackagesFile)'."

      File="$(MSBuildProjectFullPath) "/>

    <!--
      Generate an error if any explicit PackageReference did not have matching PackageVersion
     -->
    <Error
      Text="The package reference '%(MissingPackageReference.Identity)' must have a version defined in '$(CentralPackagesFile)'."

      File="$(MSBuildProjectFullPath)" />

    <!--
      Generate an error if any implicit PackageReference did not have matching PackageVersion
     -->
    <Error
      Text="The implicit package reference '%(MissingPackageReference.Identity)' must have a version defined in '$(CentralPackagesFile)'."

      File="$(MSBuildProjectFullPath)" />

    <!--
      Generate an error if any project specified a PackageReference and there is already the same GlobalPackageReference
     -->
    <Error
      Text="The package reference '%(DuplicateGlobalPackageReference.Identity)' is already defined as a GlobalPackageReference in '$(CentralPackagesFile)'.  Individual projects do not need to include a PackageReference if a GlobalPackageReference is declared."

      File="$(MSBuildProjectFullPath)" />

  </Target>

  <Import Project="$(CustomAfterCentralPackageVersionsTargets)" Condition=" '$(CustomAfterCentralPackageVersionsTargets)' != '' And Exists('$(CustomAfterCentralPackageVersionsTargets)') " />

</Project>