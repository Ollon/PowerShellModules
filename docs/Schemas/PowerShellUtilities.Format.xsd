<xs:schema
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="DisplayError" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        (Optional) Defines the common controls that can be used by all views of the formatting file.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="PropertyCountForTable" type="xs:int">
    <xs:annotation>
      <xs:documentation>
        (Optional) Specifies the minimum number of properties that an object must have to display the object in a table view.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="ShowError" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        (Optional) Specifies that the full error record is displayed when an error occurs while displaying a piece of data.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="WrapTables" type="xs:boolean">
    <xs:annotation>
      <xs:documentation>
        (Optional) Specifies that data in a table is moved to the next line if it does not fit into the width of the column.
      </xs:documentation>
    </xs:annotation>
  </xs:element>


  <xs:element name="Configuration" type="Configuration">
    <xs:annotation>
      <xs:documentation>
        Represents the top-level element of a formatting file. Formatting files define how objects are displayed. In most cases, this root element contains a ViewDefinitions element that defines the table, list, and wide views of the formatting file. In addition to the view definitions, the formatting file can define common selection sets, settings, and controls that those views can use.
      </xs:documentation>
    </xs:annotation>
  </xs:element>



  <xs:complexType name="Configuration">
    <xs:sequence>
      <xs:element ref="DefaultSettings" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Defines common settings that apply to all the views of the formatting file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="SelectionSets" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Defines the common sets of .NET Framework objects that can be used by all views of the formatting file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="Controls" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Defines the common controls that can be used by all views of the formatting file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="ViewDefinitions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Defines the views used to display objects.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>


  <xs:element name="DefaultSettings" type="DefaultSettings">
    <xs:annotation>
      <xs:documentation>
        Defines common settings that apply to all the views of the formatting file. Common settings include displaying errors, wrapping text in tables, defining how collections are expanded, and more.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="DefaultSettings">
    <xs:sequence>
      <xs:element ref="DisplayError" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies that the string #ERR is displayed when an error occurs while displaying a piece of data.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="EnumerableExpansions" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Defines the different ways that .NET Framework objects are expanded when they are displayed in a view.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="PropertyCountForTable" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies the minimum number of properties that an object must have to display the object in a table view.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="ShowError" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies that the full error record is displayed when an error occurs while displaying a piece of data.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="WrapTables" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies that data in a table is moved to the next line if it does not fit into the width of the column.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="EnumerableExpansions" type="EnumerableExpansions">
    <xs:annotation>
      <xs:documentation>
        Defines how .NET Framework collection objects are expanded when they are displayed in a view.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="EnumerableExpansions">
    <xs:sequence>
      <xs:element ref="EnumerableExpansion">
        <xs:annotation>
          <xs:documentation>
            (Optional) Defines the specific .NET Framework collection objects that are expanded when they are displayed in a view.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="TypeName" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Specifies a .NET Framework type that is expanded by this definition. This element is used when defining a default settings.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="SelectionSetName" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Specifies the set of .NET Framework types that are expanded by this definition.
      </xs:documentation>
    </xs:annotation>
  </xs:element>


  <xs:element name="PropertyName" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Specifies the .NET Framework property that triggers the condition. When this property is present or when it evaluates to true, the condition is met, and the definition is used.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="ScriptBlock" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Specifies the script that triggers the condition.
      </xs:documentation>
    </xs:annotation>
  </xs:element>


  <xs:element name="SelectionCondition" type="SelectionCondition" />
  <xs:complexType name="SelectionCondition">
    <xs:sequence>
      <xs:element ref="ScriptBlock" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies the script that triggers the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="PropertyName" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies the .NET Framework property that triggers the condition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="TypeName" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies a .NET Framework type that uses this definition of how collection objects are expanded.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="SelectionSetName" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies a set of .NET Framework types that use this definition of how collection objects are expanded.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="EntrySelectedBy" type="EntrySelectedBy" />
  <xs:complexType name="EntrySelectedBy">
    <xs:sequence>
      <xs:element ref="SelectionCondition" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Defines the condition that must exist to expand the collection objects of this definition.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="TypeName" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies a .NET Framework type that uses this definition of how collection objects are expanded.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="SelectionSetName" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            (Optional) Specifies a set of .NET Framework types that use this definition of how collection objects are expanded.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:element name="EnumerableExpansion" type="EnumerableExpansion" />
  <xs:complexType name="EnumerableExpansion">
    <xs:sequence>
      <xs:element ref="EntrySelectedBy" />
      <xs:element ref="Expand" />
    </xs:sequence>
  </xs:complexType>

  <xs:element name="SelectionSets" type="SelectionSetsType" />
  <xs:complexType name="SelectionSetsType">
    <xs:sequence></xs:sequence>
  </xs:complexType>

  <xs:element name="Controls" type="Controls" />
  <xs:complexType name="Controls">
  </xs:complexType>

  <xs:element name="View" type="View" />
  <xs:complexType name="View">
    <xs:sequence></xs:sequence>
  </xs:complexType>

  <xs:element name="Name" type="xs:string" />

  <xs:element name="ViewDefinitions" type="ViewDefinitions" />
  <xs:complexType name="ViewDefinitions">
    <xs:sequence>
      <xs:element ref="View">
        <xs:annotation>
          <xs:documentation>
            Defines a view that is used to display one or more .NET Framework objects.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  
  


  <xs:element name="Expand" type="ExpandType">
    <xs:annotation>
      <xs:documentation>
        Specifies how the collection object is expanded for this definition.
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  
  <xs:simpleType name="ExpandType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Enum" />
      <xs:enumeration value="CoreOnly"/>
      <xs:enumeration value="Both" />
    </xs:restriction>
  </xs:simpleType>

</xs:schema>